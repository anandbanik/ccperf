diff --git a/core/chaincode/handler.go b/core/chaincode/handler.go
index 70e75de43..6b7f2553a 100644
--- a/core/chaincode/handler.go
+++ b/core/chaincode/handler.go
@@ -321,8 +321,10 @@ func (h *Handler) ChaincodeName() string {
 
 // serialSend serializes msgs so gRPC will be happy
 func (h *Handler) serialSend(msg *pb.ChaincodeMessage) error {
-	h.serialLock.Lock()
-	defer h.serialLock.Unlock()
+	if _, ok := h.chatStream.(pb.ChaincodeSupport_RegisterServer); ok {
+		h.serialLock.Lock()
+		defer h.serialLock.Unlock()
+	}
 
 	if err := h.chatStream.Send(msg); err != nil {
 		err = errors.WithMessage(err, fmt.Sprintf("[%s] error sending %s", shorttxid(msg.Txid), msg.Type))
diff --git a/core/chaincode/shim/handler.go b/core/chaincode/shim/handler.go
index 15dcddf76..c20c081d5 100644
--- a/core/chaincode/shim/handler.go
+++ b/core/chaincode/shim/handler.go
@@ -63,8 +63,10 @@ func shorttxid(txid string) string {
 
 //serialSend serializes msgs so gRPC will be happy
 func (handler *Handler) serialSend(msg *pb.ChaincodeMessage) error {
-	handler.serialLock.Lock()
-	defer handler.serialLock.Unlock()
+	if _, ok := handler.ChatStream.(pb.ChaincodeSupport_RegisterClient); ok {
+		handler.serialLock.Lock()
+		defer handler.serialLock.Unlock()
+	}
 
 	err := handler.ChatStream.Send(msg)
 
